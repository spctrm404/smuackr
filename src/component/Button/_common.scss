@use 'sass:selector';
@use '../../style/base';

@mixin apply() {
  @include base.style-buttonize;
  @include base.type-label;

  @at-root {
    .area {
      $root-selector: &;

      &-interaction {
        min-width: 3rem;
        height: 3rem;

        &[data-button-type='standard'] {
          #{selector.append($root-selector, '-visible')} {
            @include base.style-set-states(
              transparent,
              base.theme-get-val('primary')
            );
          }
        }

        &[data-button-type='outline'] {
          #{selector.append($root-selector, '-visible')} {
            border: 0.0625rem solid base.theme-get-val('outline');

            @include base.style-set-states(
              transparent,
              base.theme-get-val('primary')
            );
            @include base.style-set-transition(border-color);

            &:active {
              border-color: base.theme-get-val('primary');
            }
          }
        }

        &[data-button-type='tonal'] {
          #{selector.append($root-selector, '-visible')} {
            @include base.style-set-states(
              base.theme-get-val('secondary-container'),
              base.theme-get-val('on-secondary-container')
            );
            @include base.style-set-transition(box-shadow);

            &:hover {
              box-shadow: base.theme-get-val('elevation-1');
            }

            &:active {
              box-shadow: unset;
            }
          }
        }

        &[data-button-type='filled'] {
          #{selector.append($root-selector, '-visible')} {
            @include base.style-set-states(
              base.theme-get-val('primary'),
              base.theme-get-val('on-primary')
            );
            @include base.style-set-transition(box-shadow);

            &:hover {
              box-shadow: base.theme-get-val('elevation-1');
            }

            &:active {
              box-shadow: unset;
            }
          }
        }

        &[data-button-type='elevated'] {
          #{selector.append($root-selector, '-visible')} {
            box-shadow: base.theme-get-val('elevation-1');

            @include base.style-set-states(
              base.theme-get-val('surface-container-low'),
              base.theme-get-val('primary')
            );
            @include base.style-set-transition(box-shadow);

            &:hover {
              box-shadow: base.theme-get-val('elevation-2');
            }

            &:active {
              box-shadow: base.theme-get-val('elevation-1');
            }
          }
        }
      }

      &-visible {
        display: flex;
        align-items: center;
        justify-content: center;
      }
    }
  }
}
