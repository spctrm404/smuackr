@use '../../style/base';

$tab-h: 3.0625rem;
$control-button-interaction-w: 3rem;
$control-button-interaction-h: 3rem;
$control-button-visible-w: 2.5rem;
$control-button-visible-h: 2.5rem;
$control-button-r: 256rem;
$button-interaction-h: 3rem;
$button-px: 1rem;
$tab-t: 0.0625rem;
$button-t: 0.0625rem;

.tab {
  display: flex;
  align-items: start;
  justify-content: center;
  height: $tab-h;

  &-control-button {
    position: relative;
    flex-shrink: 0;
    min-width: $control-button-interaction-w;
    height: $control-button-interaction-h;

    @include base.style-buttonize;

    .area-visible {
      display: flex;
      align-items: center;
      justify-content: center;
      width: $control-button-visible-w;
      height: $control-button-visible-h;
      border-radius: $control-button-r;

      @include base.style-set-states(
        transparent,
        base.theme-get-val('primary')
      );
    }
  }

  &-wrap {
    position: relative;
    flex-grow: 1;
    height: 100%;
    overflow: hidden;

    &::after {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      display: block;
      height: $tab-t;
      content: '';
      background-color: base.theme-get-val('outline');
    }
  }

  &-viewport {
    display: flex;
    justify-content: start;
    height: $control-button-interaction-h;
    overflow-x: scroll;

    @include base.style-hide-scrollbar;
  }

  &[data-has-control='false'] {
    @include base.style-lg {
      .tab-control-button {
        display: none;
      }
    }

    @include base.style-xl {
      .tab-control-button {
        display: none;
      }
    }

    @include base.style-xxl {
      .tab-control-button {
        display: none;
      }
    }
  }

  &-button {
    position: relative;
    flex-grow: 1;
    min-width: fit-content;
    height: $button-interaction-h;

    @include base.style-buttonize;
    @include base.type-label;

    .area-visible {
      display: flex;
      flex-grow: 1;
      align-items: center;
      justify-content: center;
      width: 100%;
      padding-inline: $button-px;

      @include base.style-set-states(
        transparent,
        base.theme-get-val('primary')
      );
    }

    &::after {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      display: block;
      height: $button-t;
      content: '';
      background-color: base.theme-get-val('primary');
      transform: scaleX(0);
      transform-origin: center;

      @include base.style-set-transition(transform);
    }

    &.selected {
      &::after {
        transform: scaleX(1);
      }
    }
  }
}
