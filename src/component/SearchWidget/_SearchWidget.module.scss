@use '../../style/base';

.SearchWidget {
  .title {
    // container query
    // max-width: 240px;
    margin-bottom: 1rem;
    color: base.thm-get-color('on-surface-variant');

    @include base.type-title-2;
  }

  .search {
    display: flex;
    align-items: center;
    justify-content: start;
    height: 3rem;
    margin-bottom: 1rem;
    overflow: hidden;
    background-color: base.thm-get-color('surface-container-highest');
    border-radius: 0.25rem;

    &-border {
      position: relative;
      display: flex;
      flex-grow: 1;
      align-items: center;
      justify-content: start;
      height: 100%;
      padding-inline: 0.75rem 1rem;
      margin-right: -0.5rem;
      border: 0.0625rem solid transparent;
      border-radius: 0.25rem;

      @include base.thm-set-transition(border-color);

      &:has(.search-input:focus-visible) {
        border: 0.0625rem solid base.thm-get-color('primary');
      }
    }

    &-input {
      flex-grow: 1;
      flex-shrink: 1;
      width: 100%;
      padding: 0;
      font-family: inherit;
      color: base.thm-get-color('on-surface');
      background-color: transparent;
      border: 0;

      @include base.type-label-1;

      &::placeholder {
        color: base.thm-get-color('on-surface-variant');

        @include base.thm-set-transition(color);
      }

      &:focus-visible {
        outline: none;

        &::placeholder {
          color: base.thm-get-color('outline-variant');
        }
      }
    }

    &-btn {
      display: flex;
      flex-direction: column;
      flex-shrink: 0;
      align-items: center;
      justify-content: center;
      width: 3rem;
      height: 3rem;
      padding: 0;
      cursor: pointer;
      border: 0;

      > .content {
        position: relative;
        z-index: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        overflow: hidden;

        @include base.thm-set-states(
          base.thm-get-color('primary'),
          base.thm-get-color('on-primary')
        );

        &::after {
          position: absolute;
          inset: 0;
          z-index: -1;
          display: block;
          content: '';
        }
      }
    }
  }

  .chips {
    display: flex;
    flex-wrap: wrap;
    column-gap: 0.5rem;
  }
}
