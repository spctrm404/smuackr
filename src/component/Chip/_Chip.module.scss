@use 'sass:selector';
@use '../../style/base';

$interaction-h: base.$dim-chip-interaction-h;
$visible-h: 2rem;
$t: 0.0625rem;
$px: 1rem;
$unbalance-pl: 0.75rem;
$gx: 0.5rem;
$icon-font-size: 1.125rem;
$r: 256rem;

.chip {
  @include base.style-buttonize;
  @include base.type-label;

  &:hover {
    text-decoration: none;
  }
}

.area {
  $root-selector: &;

  &-interaction {
    width: fit-content;
    min-width: fit-content;
    height: $interaction-h;

    &[data-chip-type='standard'] {
      #{selector.append($root-selector, '-visible')} {
        border: $t solid base.theme-get-val('outline');

        @include base.style-set-states(
          transparent,
          base.theme-get-val('on-surface-variant')
        );
      }
    }

    &[data-chip-type='elevated'] {
      #{selector.append($root-selector, '-visible')} {
        padding-inline: $px;
        box-shadow: base.theme-get-val('elevation-1');

        @include base.style-set-states(
          base.theme-get-val('surface-container-low'),
          base.theme-get-val('on-surface-variant')
        );
        @include base.style-set-transition(box-shadow);

        &:hover {
          box-shadow: base.theme-get-val('elevation-2');
        }

        &:active {
          box-shadow: base.theme-get-val('elevation-1');
        }
      }
    }

    &[data-has-icon='true'] {
      #{selector.append($root-selector, '-visible')} {
        padding-inline: $unbalance-pl $px;
      }

      &[data-button-type='standard'] {
        #{selector.append($root-selector, '-visible')} {
          padding-inline: $unbalance-pl - $t $px - $t;
        }
      }
    }
  }

  &-visible {
    display: flex;
    gap: $gx;
    align-items: center;
    justify-content: center;
    height: $visible-h;
    padding-inline: $px - $t;
    border-radius: $r;

    > * {
      white-space: nowrap;
    }
  }
}

.icon {
  font-size: $icon-font-size;
  color: base.theme-get-val('primary');
}
