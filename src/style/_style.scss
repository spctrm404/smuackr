@use 'sass:color';
@use 'sass:list';
@use 'sass:selector';
@use 'theme';
@use 'dimension';
@use 'type-semantic';

@mixin buttonize() {
  cursor: pointer;
  user-select: none;

  @at-root {
    .area {
      $root-selector: &;

      &-interaction {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
      }

      &-visible {
        position: relative;
        overflow: hidden;
        isolation: isolate;

        &::before {
          position: absolute;
          inset: 0;
          z-index: -1;
          display: block;
          content: '';
        }
      }
    }
  }
}

@function get-transparent($col, $alp) {
  @return color.change($col, $alpha: $alp);
}

@function get-states($fg) {
  $states: get-transparent($fg, 0), get-transparent($fg, 0.08),
    get-transparent($fg, 0.12), get-transparent($fg, 0.16);

  @return $states;
}

@mixin set-transition($prop, $dura: 200ms) {
  transition: $prop $dura cubic-bezier(0.2, 0, 0, 1);
}

@mixin set-states($bg, $fg) {
  $states: get-states($fg);

  color: $fg;
  background-color: $bg;

  &::before {
    background-color: list.nth($states, 1);

    @include set-transition(background-color);
  }

  &:hover {
    &::before {
      background-color: list.nth($states, 2);
    }
  }

  &:active {
    &::before {
      background-color: list.nth($states, 3);
    }
  }

  @at-root {
    .selected {
      #{selector.unify(&, '::before')} {
        background-color: list.nth($states, 4);
      }
    }
  }
}

@mixin hide-scrollbar() {
  scrollbar-width: none;
  -ms-overflow-style: none;

  &::-webkit-scrollbar {
    width: 0;
    height: 0;
    background-color: transparent;
  }
}
